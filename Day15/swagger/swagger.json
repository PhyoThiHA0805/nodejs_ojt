{
    "swagger": "2.0.0",
    "info": {
        "version": "1.0.9",
        "title": "My User Project CRUD",
        "description": "My User Project Application API",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:3000",
    "basePath": "/",
    "tags": [
        {
            "name": "Users",
            "description": "API for users in the system"
        },
        {
            "name": "Auth",
            "description": "API for auth route"
        }
    ],
    "schemes": [
        "http"
    ],
    "consumes": [
        " application/json"
    ],
    "produces": [
        " application/json"
    ],
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic"
        },
        "bearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "description": "JWT Authorization header"
        }
    },
    "paths": {
        "/user": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GetUsers"
                        }
                    }
                }
            }
        },
        "/user/{username}": {
            "get": {
                "summary": "Find user by usename",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "required": true,
                        "description": "Username to find",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found",
                        "schema": {
                            "$ref": "#/definitions/GetUsers"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "array"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/signup": {
            "post": {
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "User that we want to create",
                        "schema": {
                            "$ref": "#/definitions/CreateUser"
                        }
                    },
                    {
                        "name": "profileImage",
                        "in": "formData",
                        "description": "Profile image of the user",
                        "type": "file",
                        "required": true
                    }
                ],
                "produces": [
                    " application/json"
                ],
                "summary": "Create New User",
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/CreateUser"
                        }
                    }
                }
            }
        },
        "/user/{user_id}": {
            "put": {
                "summary": "Update user with give ID",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "description": "ID of user that we want to update",
                        "type": "string"
                    },
                    {
                        "name": "update User",
                        "in": "body",
                        "required": true,
                        "description": "User with new values of properties",
                        "schema": {
                            "$ref": "#/definitions/UpdateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User is updated",
                        "schema": {
                            "$ref": "#/definitions/UpdateUser"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete user with given ID",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "description": "ID of user that we want to delete",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User is successfully deleted"
                    }
                }
            }
        },
        "/auth/profile": {
            "get": {
                "summary": "Go to secure Route",
                "tags": [
                    "Auth"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWT access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully go into secure route",
                        "schema": {
                            "$ref": "#/definitions/Profile"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "summary": "Login User",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "update User",
                        "in": "body",
                        "required": true,
                        "description": "User with new values of properties",
                        "schema": {
                            "$ref": "#/definitions/LoginUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login Successful",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/forget-password": {
            "post": {
                "summary": "Getting Password Reset Link from Gmail",
                "tags": [
                    "Auth"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "description": "Users's gmail",
                        "schema": {
                            "$ref": "#/definitions/ForgetPasswordMail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pasword Reset Link send successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "success": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Given email address is invalid",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "success": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/forget-password/{user_id}/{token}": {
            "post": {
                "summary": "Resetting Password",
                "tags": [
                    "Auth"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "description": "ID of user that we want to update",
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "description": "Token of user",
                        "type": "string"
                    },
                    {
                        "name": "Update password",
                        "in": "body",
                        "required": true,
                        "description": "New Password value",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "password": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "success": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Password reset failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "success": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "GetUsers": {
            "type": "object",
            "required": [
                "profileImage",
                "username",
                "email",
                "password"
            ],
            "properties": {
                "user_id": {
                    "type": "string",
                    "uniqueItems": true
                },
                "username": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "CreateUser": {
            "type": "object",
            "required": [
                "profileImage",
                "username",
                "email",
                "password"
            ],
            "properties": {
                "username": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "format": "email"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "UpdateUser": {
            "type": "object",
            "required": [
                "username",
                "email",
                "password"
            ],
            "properties": {
                "username": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "format": "email"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "Profile": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "user": {
                    "type": "object"
                }
            }
        },
        "LoginUser": {
            "type": "object",
            "required": [
                "username",
                "password"
            ],
            "properties": {
                "username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "ForgetPasswordMail": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "format": "email"
                }
            }
        }
    }
}